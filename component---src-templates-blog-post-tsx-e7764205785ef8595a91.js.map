{"version":3,"sources":["webpack:///./src/components/Toc/toc.tsx","webpack:///./src/components/Toc/use-active-hash.ts","webpack:///./src/templates/blog-post.tsx"],"names":["TableOfContents","html","activeHash","itemIds","rootMargin","undefined","useState","setActiveHash","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","id","observe","document","getElementById","unobserve","useActiveHash","useMemo","val","dummyDOM","createElement","innerHTML","querySelectorAll","a","push","hash","replace","classList","remove","activeLink","length","add","className","dangerouslySetInnerHTML","__html","css","tocStyle","pageQuery","Wrapper","BlogPostTemplate","data","pageContext","post","markdownRemark","previous","next","Layout","SEO","title","frontmatter","description","excerpt","styles","globalStyles","Header","tableOfContents","BlogBody","style","marginBottom","display","date","flexWrap","justifyContent","listStyle","padding","to","fields","slug","rel","Footer"],"mappings":"wNA2CeA,MAvCf,YAAmC,IAARC,EAAQ,EAARA,KAgBnBC,EClBqB,SAACC,EAASC,QAA2B,IAA3BA,WAAaC,GAAc,MAC5BC,mBAAS,IAAtCJ,EADyD,KAC7CK,EAD6C,KA0BhE,OAvBAC,qBAAU,WACR,IAAMC,EAAW,IAAIC,sBACnB,SAAAC,GACEA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBACRP,EAAcM,EAAME,OAAOC,SAIjC,CAAEZ,WAAYA,GAAc,kBAO9B,OAJAD,EAAQS,SAAQ,SAAAI,GACdP,EAASQ,QAAQC,SAASC,eAAeH,OAGpC,WACLb,EAAQS,SAAQ,SAAAI,GACdP,EAASW,UAAUF,SAASC,eAAeH,UAG9C,IAEId,EDRYmB,CAfCC,mBAAQ,WAC1B,IAAIC,EAAM,GACV,GAAuB,oBAAbL,SAAyB,CACjC,IAAIM,EAAWN,SAASO,cAAc,QACtCD,EAASE,UAAYzB,EACDuB,EAASG,iBAAT,KAERf,SAAQ,SAAAgB,GAClBL,EAAIM,KAAKD,EAAEE,KAAKC,QAAQ,IAAK,QAIjC,OAAOR,IACN,KAoBH,OAhBAf,qBAAU,WACSU,SAASS,iBAAT,UAERf,SAAQ,SAAAgB,GACfA,EAAEI,UAAUC,OAAO,eAGrB,IAAMC,EAAahB,SAASS,iBAAT,mBACOzB,EADP,MAIfgC,EAAWC,QACbD,EAAW,GAAGF,UAAUI,IAAI,cAE7B,CAAClC,IAGF,mBAAKmC,UAAU,MAAMC,wBAAyB,CAAEC,OAAQtC,GAAQuC,IAAKC,KAMnEA,EAAW,CAAH,6a,oCEyCDC,EAAY,aAqBnBC,GAFSC,UA5FU,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1BC,EAAOF,EAAKG,eAEVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,YAACC,EAAA,EAAD,KACE,YAACC,EAAA,EAAD,CACEC,MAAON,EAAKO,YAAYD,MACxBE,YAAaR,EAAKO,YAAYC,aAAeR,EAAKS,UAEpD,YAAC,IAAD,CAAQC,OAASC,MACjB,YAACC,EAAA,EAAD,MACA,YAAChB,EAAD,KACA,YAAC,EAAD,CAAiB1C,KAAM8C,EAAKa,kBAC5B,YAACC,EAAD,KACE,0BACE,kBACEC,MAAO,CACLC,aAAc,IAGfhB,EAAKO,YAAYD,OAEpB,iBACES,MAAO,CACLE,QAAS,UAGVjB,EAAKO,YAAYW,OAGtB,uBAAS3B,wBAAyB,CAAEC,OAAQQ,EAAK9C,QACjD,yBASF,uBACE,kBACE6D,MAAO,CACLE,QAAS,OACTE,SAAU,OACVC,eAAgB,gBAChBC,UAAW,OACXC,QAAS,IAGX,sBACGpB,GACC,YAAC,OAAD,CAAMqB,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAApC,KACKxB,EAASK,YAAYD,QAI9B,sBACGH,GACC,YAAC,OAAD,CAAMoB,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKI,YAAYD,MADpB,SAOR,YAACqB,EAAA,EAAD,QA0BU,mBAAH,oBAAG,CAAH,gEAKPb,EAAW,uBAAH,oBAAG,CAAH","file":"component---src-templates-blog-post-tsx-e7764205785ef8595a91.js","sourcesContent":["import React, { useEffect, useMemo } from \"react\"\nimport { useActiveHash } from \"./use-active-hash\"\nimport { css } from \"@emotion/core\"\n\nfunction TableOfContents({ html }) {\n  const targetedIds = useMemo(() => {\n    let val = []\n    if(typeof document !== 'undefined'){\n      var dummyDOM = document.createElement(\"html\")\n      dummyDOM.innerHTML = html\n      const justAnchors = dummyDOM.querySelectorAll(`a`)\n    \n      justAnchors.forEach(a => {\n        val.push(a.hash.replace(\"#\", \"\"))\n      });\n    }\n\n    return val;\n  }, [])\n\n  const activeHash = useActiveHash(targetedIds)\n\n  useEffect(() => {\n    const ToClinks = document.querySelectorAll(`.Toc a`)\n\n    ToClinks.forEach(a => {\n      a.classList.remove(\"isActive\")\n    })\n\n    const activeLink = document.querySelectorAll(\n      `.Toc a[href$=\"${\"/#\" + activeHash}\"]`\n    )\n\n    if (activeLink.length) {\n      activeLink[0].classList.add(\"isActive\")\n    }\n  }, [activeHash])\n\n  return (\n    <div className=\"Toc\" dangerouslySetInnerHTML={{ __html: html }} css={tocStyle}/>\n  )\n}\n\nexport default TableOfContents\n\nconst tocStyle = css`\n  position: sticky;\n  top: 76px;\n  font-size: 85%;\n  height: 0px;\n  font-weight: 600;\n  \n  @media (max-width: 960px) {\n    display: none;\n  }\n  \n  ::before { \n    content: \"contents\";\n    letter-spacing: 1px;\n    text-transform: uppercase;\n    line-height: 1.2;\n  };\n  > ul { padding-left: 0; }\n  ul {\n    width: 187px;\n\n    li{\n      display: inline-block;\n      list-style: outside none none;\n      padding-top: 16px;\n      a {\n        color: #88A0A8;\n        box-shadow: none;\n      }\n\n      p {\n        margin: 0;\n      }\n\n      .isActive{\n        color: #111;\n      }\n    }\n\n    li:last-child {\n      margin-bottom: 0px;\n    }\n  };\n`","import { useEffect, useState } from \"react\"\n\nexport const useActiveHash = (itemIds, rootMargin = undefined) => {\n  const [activeHash, setActiveHash] = useState(``)\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      entries => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            setActiveHash(entry.target.id)\n          }\n        })\n      },\n      { rootMargin: rootMargin || `0% 0% -80% 0%` }\n    )\n\n    itemIds.forEach(id => {\n      observer.observe(document.getElementById(id))\n    })\n\n    return () => {\n      itemIds.forEach(id => {\n        observer.unobserve(document.getElementById(id))\n      })\n    }\n  }, [])\n\n  return activeHash\n}","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Layout from \"../components/Layout\"\n//import Bio from \"../components/Bio\"\nimport SEO from \"../components/SEO\"\nimport TableOfContents from \"../components/Toc\"\nimport Header from \"../components/Header\"\nimport Footer from '../components/Footer'\n\nimport styled from '@emotion/styled'\nimport { Global } from \"@emotion/core\"\nimport { globalStyles } from '../utils/global-css'\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  //const siteTitle = data.site.siteMetadata.title\n  const { previous, next } = pageContext\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <Global styles={ globalStyles }/>\n      <Header/>\n      <Wrapper>\n      <TableOfContents html={post.tableOfContents}/>\n      <BlogBody>\n        <header>\n          <h1\n            style={{\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h1>\n          <p\n            style={{\n              display: `block`,\n            }}\n          >\n            {post.frontmatter.date}\n          </p>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }}/>\n        <hr/>\n        {/*\n        <footer>\n          <Bio />\n        </footer>\n        */}\n      </BlogBody>\n      </Wrapper>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n      <Footer/>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 160)\n      tableOfContents\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n\nexport default BlogPostTemplate\n\nconst Wrapper = styled.div`\n  justify-content: center;\n  display: flex;\n`\n\nconst BlogBody = styled.article`\n  position: relative;\n  transition: background 0.2s linear;\n  margin: 0px 64px;\n  max-width: 680px;\n  width: 100%;\n  min-width: 0px;\n\n  a {\n    color: #4361ee;\n  }\n`\n"],"sourceRoot":""}